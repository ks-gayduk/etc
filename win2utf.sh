#!/bin/bash
################################################################################
#    Скрипт конвертации кодировки файлов указанного каталога                   #
#    из CP1251 в UTF-8.                                                        #
#    Предполагается, что все файлы сохранены в одной из двух                   #
#    кодировок: либо CP1251, либо UTF-8.                                       #
#    Copyright (c) Гайдук К.С. 2016                                            #
################################################################################

# find – команда поиска файлов и каталогов;
# $1 – поиск в каталоге (рекурсивный), путь к которому задан
# как первый параметр при запуске скрипта;
# -type f – ищем только файлы;
# доп. параметров не задано – ищем все файлы.
# find – это программа; при ее запуске, запускается соотв. процесс;
# как и любой процесс, find имеет свой ст. поток вывода stdout;
# данные из stdout процесса find перенаправляются на ст. поток ввода (stdin) 
# следующей команды с помощью конвейера.
find $1 -type f |

# В цикле вызывается команда read, которая из ст. потока 
# ввода построчно считывает данные в переменную fn.
# В случае успеха, возвращает true.
while read fn
do
	# Получение информации о файле с помощью команды file.
	# -b – не печатать имя файла;
	# -i – вывести сведения о типе и кодировке файла.
	fi=`file -bi $fn` # Пример: text/x-c++; charset=iso-8859-1
	
	# Определяем тип файла. Файл текстовый?
	ft=${fi:0:4}
	if [ "$ft" = "text" ]
	then
		# Определение кодировки файла.
		
		# expr str : tpl – поиск подстроки в строке str по шаблону tpl, 
		# заданному рег. выражением (поиск начинается с конца строки);
		# подстрока начинается на "charset".
		cs=`expr "$fi" : '.*\(charset.*\)'`
		# Вычленяем название кодировки.
		cs_name=${cs:8}
		
		# Если файл изначально не был сохранен в UTF-8.
		if [ "$cs_name" != "utf-8" ]
		then
			# Конвертация кодировки.
			iconv -f CP1251 -t UTF-8 "$fn" > tmp
			# Перемещение файла с замещением.
			mv tmp "$fn"
		fi
	fi
done

exit 0
